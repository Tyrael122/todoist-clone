
  const [tasksColumns, setTaskColumns] = useState([
    {
      id: 0,
      tasks: [
        createUpcomingTask({
          title: "Praticar desenvolvimento front end",
          description: "Sample description",
          priority: 2,
        }),
        createUpcomingTask({
          title: "Fazer 100 push-ups",
          description: "",
          priority: 2,
        }),
        createUpcomingTask({
          title: "Read 10 pages of Network book",
          description: "",
          priority: 3,
        }),
      ],
    },
    {
      id: 1,
      tasks: [
        createUpcomingTask({
          title: "Praticar desenvolvimento front end",
          description: "Sample description",
          priority: 2,
        }),
        createUpcomingTask({
          title: "Fazer 100 push-ups",
          description: "",
          priority: 2,
        }),
        createUpcomingTask({
          title: "Read 10 pages of Network book",
          description: "",
          priority: 3,
        }),
      ],
    },
    {
      id: 2,
      tasks: [
        createUpcomingTask({
          title: "Praticar desenvolvimento front end",
          description: "Sample description",
          priority: 2,
        }),
        createUpcomingTask({
          title: "Fazer 100 push-ups",
          description: "",
          priority: 2,
        }),
        createUpcomingTask({
          title: "Read 10 pages of Network book",
          description: "",
          priority: 3,
        }),
      ],
    },
    {
      id: 3,
      tasks: [
        createUpcomingTask({
          title: "Praticar desenvolvimento front end",
          description: "Sample description",
          priority: 2,
        }),
        createUpcomingTask({
          title: "Fazer 100 push-ups",
          description: "",
          priority: 2,
        }),
        createUpcomingTask({
          title: "Read 10 pages of Network book",
          description: "",
          priority: 3,
        }),
      ],
    },
    {
      id: 4,
      tasks: [
        // createUpcomingTask({
        //   id: 12,
        //   title: "Praticar desenvolvimento front end",
        //   description: "Sample description",
        //   priority: 2,
        // }),
        // createUpcomingTask({
        //   id: 13,
        //   title: "Fazer 100 push-ups",
        //   description: "",
        //   priority: 2,
        // }),
        // createUpcomingTask({
        //   id: 14,
        //   title: "Read 10 pages of Network book",
        //   description: "",
        //   priority: 3,
        // }),
      ],
    },
  ]);









  <div
          className="border-2 rounded-md p-1"
          onClick={() => {
            const datePicker = document.getElementById("potato");
            if (datePicker == null) {
              console.log("DIndt find the element");
              return;
            }

            if (datePicker instanceof HTMLInputElement) {
              datePicker.hidden = false;

              datePicker.showPicker();

              console.log("just showed pciker.");
            }
          }}
          style={{
            position: "relative",
          }}
        >
          <input
            id="potato"
            style={{
              position: "absolute",
              overflow: "hidden",
              width: "100%",
              height: "100%",
              left: 0,
              top: 0,
              opacity: 0,
            }}
            type="date"
            value={initialDate.toISODateString()}
            onChange={(e) => {
              const dateParts = e.currentTarget.value.split("-");
              const year = parseInt(dateParts[0]);
              const month = parseInt(dateParts[1]);
              const day = parseInt(dateParts[2]);

              console.log(dateParts);

              const date = new Date(year, month - 1, day);

              console.log(date);

              setSelectedDate(date);
            }}
          />

          <span className="text-sm">{formatDateToDisplay(selectedDate)}</span>
        </div>